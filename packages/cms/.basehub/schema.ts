// This file was generated by basehub. Do not edit directly. Read more: https://basehub.com/docs/api-reference/basehub-sdk

/* eslint-disable */
/* eslint-disable eslint-comments/no-restricted-disable */
/* tslint:disable */

// @ts-nocheck
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

export type Scalars = {
    BSHBEventSchema: any,
    BSHBRichTextContentSchema: any,
    BSHBRichTextTOCSchema: any,
    Boolean: boolean,
    CodeSnippetLanguage: any,
    DateTime: any,
    Float: number,
    ID: string,
    Int: number,
    JSON: any,
    String: string,
}

export type AnalyticsKeyScope = 'query' | 'send'

export interface Authors {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _meta: ListMeta
    /** The key used to search from the frontend. */
    _searchKey: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    items: AuthorsItem[]
    __typename: 'Authors'
}

export interface AuthorsItem {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    avatar: BlockImage
    xUrl: (Scalars['String'] | null)
    __typename: 'AuthorsItem'
}

export type AuthorsItemOrderByEnum = '_sys_createdAt__ASC' | '_sys_createdAt__DESC' | '_sys_hash__ASC' | '_sys_hash__DESC' | '_sys_id__ASC' | '_sys_id__DESC' | '_sys_lastModifiedAt__ASC' | '_sys_lastModifiedAt__DESC' | '_sys_slug__ASC' | '_sys_slug__DESC' | '_sys_title__ASC' | '_sys_title__DESC' | 'avatar__ASC' | 'avatar__DESC' | 'xUrl__ASC' | 'xUrl__DESC'

export interface BaseRichTextJson {
    blocks: Scalars['String']
    content: Scalars['BSHBRichTextContentSchema']
    toc: Scalars['BSHBRichTextTOCSchema']
    __typename: 'BaseRichTextJson'
}

export interface BlockAudio {
    fileName: Scalars['String']
    fileSize: Scalars['Int']
    lastModified: Scalars['Float']
    mimeType: Scalars['String']
    url: Scalars['String']
    __typename: 'BlockAudio'
}

export interface BlockCodeSnippet {
    allowedLanguages: Scalars['CodeSnippetLanguage'][]
    code: Scalars['String']
    /** @deprecated Figuring out the correct api. */
    html: Scalars['String']
    language: Scalars['CodeSnippetLanguage']
    __typename: 'BlockCodeSnippet'
}

export interface BlockColor {
    b: Scalars['Int']
    g: Scalars['Int']
    hex: Scalars['String']
    hsl: Scalars['String']
    r: Scalars['Int']
    rgb: Scalars['String']
    __typename: 'BlockColor'
}

export type BlockDocument = (Authors | AuthorsItem | Blog | Categories | CategoriesItem | LegalPages | LegalPagesItem | Posts | PostsItem) & { __isUnion?: true }

export interface BlockDocumentSys {
    apiNamePath: Scalars['String']
    createdAt: Scalars['String']
    hash: Scalars['String']
    id: Scalars['ID']
    idPath: Scalars['String']
    lastModifiedAt: Scalars['String']
    slug: Scalars['String']
    slugPath: Scalars['String']
    title: Scalars['String']
    __typename: 'BlockDocumentSys'
}

export interface BlockFile {
    fileName: Scalars['String']
    fileSize: Scalars['Int']
    lastModified: Scalars['Float']
    mimeType: Scalars['String']
    url: Scalars['String']
    __typename: 'BlockFile'
}

export interface BlockImage {
    alt: (Scalars['String'] | null)
    aspectRatio: Scalars['String']
    blurDataURL: Scalars['String']
    fileName: Scalars['String']
    fileSize: Scalars['Int']
    height: Scalars['Int']
    lastModified: Scalars['Float']
    mimeType: Scalars['String']
    /** @deprecated Renamed to `blurDataURL` to match Next.js Image's naming convention. */
    placeholderURL: Scalars['String']
    /** @deprecated Use `url` instead. */
    rawUrl: Scalars['String']
    thumbhash: Scalars['String']
    /**
     * This field is used to generate the image URL with the provided options. The options are passed as arguments. For example, if you want to resize the image to 200x200 pixels, you can use the following query:
     * 
     * ```graphql
     * {
     *   blockImage {
     *     url(width: 200, height: 200)
     *   }
     * }
     * ```
     * 
     * This will return the URL with the width and height set to 200 pixels.
     * 
     * BaseHub uses Cloudflare for image resizing. Check out [all available options in their docs](https://developers.cloudflare.com/images/transform-images/transform-via-workers/#fetch-options).
     * 
     */
    url: Scalars['String']
    width: Scalars['Int']
    __typename: 'BlockImage'
}

export type BlockList = (Authors | Categories | LegalPages | Posts) & { __isUnion?: true }

export interface BlockOgImage {
    url: Scalars['String']
    __typename: 'BlockOgImage'
}


/** Rich text block */
export type BlockRichText = (Body | Body_1) & { __isUnion?: true }

export interface BlockVideo {
    aspectRatio: Scalars['String']
    /** The duration of the video in seconds. If the duration is not available, it will be estimated based on the file size. */
    duration: Scalars['Float']
    fileName: Scalars['String']
    fileSize: Scalars['Int']
    height: Scalars['Int']
    lastModified: Scalars['Float']
    mimeType: Scalars['String']
    url: Scalars['String']
    width: Scalars['Int']
    __typename: 'BlockVideo'
}

export interface Blog {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    authors: Authors
    categories: Categories
    posts: Posts
    __typename: 'Blog'
}

export interface Body {
    html: Scalars['String']
    json: BodyRichText
    markdown: Scalars['String']
    plainText: Scalars['String']
    readingTime: Scalars['Int']
    __typename: 'Body'
}

export interface BodyRichText {
    content: Scalars['BSHBRichTextContentSchema']
    toc: Scalars['BSHBRichTextTOCSchema']
    __typename: 'BodyRichText'
}

export interface Body_1 {
    html: Scalars['String']
    json: Body_1RichText
    markdown: Scalars['String']
    plainText: Scalars['String']
    readingTime: Scalars['Int']
    __typename: 'Body_1'
}

export interface Body_1RichText {
    content: Scalars['BSHBRichTextContentSchema']
    toc: Scalars['BSHBRichTextTOCSchema']
    __typename: 'Body_1RichText'
}

export interface Categories {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _meta: ListMeta
    /** The key used to search from the frontend. */
    _searchKey: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    items: CategoriesItem[]
    __typename: 'Categories'
}

export interface CategoriesItem {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    __typename: 'CategoriesItem'
}

export type CategoriesItemOrderByEnum = '_sys_createdAt__ASC' | '_sys_createdAt__DESC' | '_sys_hash__ASC' | '_sys_hash__DESC' | '_sys_id__ASC' | '_sys_id__DESC' | '_sys_lastModifiedAt__ASC' | '_sys_lastModifiedAt__DESC' | '_sys_slug__ASC' | '_sys_slug__DESC' | '_sys_title__ASC' | '_sys_title__DESC'

export interface LegalPages {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _meta: ListMeta
    /** The key used to search from the frontend. */
    _searchKey: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    items: LegalPagesItem[]
    __typename: 'LegalPages'
}

export interface LegalPagesItem {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    body: Body_1
    description: Scalars['String']
    __typename: 'LegalPagesItem'
}

export type LegalPagesItemOrderByEnum = '_sys_createdAt__ASC' | '_sys_createdAt__DESC' | '_sys_hash__ASC' | '_sys_hash__DESC' | '_sys_id__ASC' | '_sys_id__DESC' | '_sys_lastModifiedAt__ASC' | '_sys_lastModifiedAt__DESC' | '_sys_slug__ASC' | '_sys_slug__DESC' | '_sys_title__ASC' | '_sys_title__DESC' | 'body__ASC' | 'body__DESC' | 'description__ASC' | 'description__DESC'

export interface ListMeta {
    totalCount: Scalars['Int']
    __typename: 'ListMeta'
}

export interface Posts {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _meta: ListMeta
    /** The key used to search from the frontend. */
    _searchKey: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    items: PostsItem[]
    __typename: 'Posts'
}

export interface PostsItem {
    _analyticsKey: Scalars['String']
    _id: Scalars['String']
    _idPath: Scalars['String']
    _slug: Scalars['String']
    _slugPath: Scalars['String']
    _sys: BlockDocumentSys
    _title: Scalars['String']
    authors: AuthorsItem[]
    body: Body
    categories: (CategoriesItem[] | null)
    /** ISO 8601 date string. */
    date: Scalars['String']
    description: Scalars['String']
    image: BlockImage
    __typename: 'PostsItem'
}

export type PostsItemOrderByEnum = '_sys_createdAt__ASC' | '_sys_createdAt__DESC' | '_sys_hash__ASC' | '_sys_hash__DESC' | '_sys_id__ASC' | '_sys_id__DESC' | '_sys_lastModifiedAt__ASC' | '_sys_lastModifiedAt__DESC' | '_sys_slug__ASC' | '_sys_slug__DESC' | '_sys_title__ASC' | '_sys_title__DESC' | 'authors__ASC' | 'authors__DESC' | 'body__ASC' | 'body__DESC' | 'categories__ASC' | 'categories__DESC' | 'date__ASC' | 'date__DESC' | 'description__ASC' | 'description__DESC' | 'image__ASC' | 'image__DESC'

export interface Query {
    /** Query across all of the instances of a component. Pass in filters and sorts if you want, and get each instance via the `items` key. */
    _componentInstances: _components
    _sys: RepoSys
    blog: Blog
    legalPages: LegalPages
    __typename: 'Query'
}

export interface RepoSys {
    hash: Scalars['String']
    id: Scalars['ID']
    slug: Scalars['String']
    title: Scalars['String']
    __typename: 'RepoSys'
}

export type RichTextJson = (BaseRichTextJson | BodyRichText | Body_1RichText) & { __isUnion?: true }

export interface Variant {
    apiName: Scalars['String']
    color: Scalars['String']
    id: Scalars['String']
    isDefault: Scalars['Boolean']
    label: Scalars['String']
    __typename: 'Variant'
}

export interface _components {
    authorsItem: Authors
    categoriesItem: Categories
    legalPagesItem: LegalPages
    postsItem: Posts
    __typename: '_components'
}

export interface AuthorsGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _meta?: ListMetaGenqlSelection
    /** The key used to search from the frontend. */
    _searchKey?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    items?: AuthorsItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthorsItemGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    avatar?: BlockImageGenqlSelection
    xUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthorsItemFilterInput {AND?: (AuthorsItemFilterInput | null),OR?: (AuthorsItemFilterInput | null),_sys_apiNamePath?: (StringFilter | null),_sys_createdAt?: (DateFilter | null),_sys_hash?: (StringFilter | null),_sys_id?: (StringFilter | null),_sys_idPath?: (StringFilter | null),_sys_lastModifiedAt?: (DateFilter | null),_sys_slug?: (StringFilter | null),_sys_slugPath?: (StringFilter | null),_sys_title?: (StringFilter | null),xUrl?: (StringFilter | null)}

export interface BaseRichTextJsonGenqlSelection{
    blocks?: boolean | number
    content?: boolean | number
    toc?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockAudioGenqlSelection{
    fileName?: boolean | number
    fileSize?: boolean | number
    lastModified?: boolean | number
    mimeType?: boolean | number
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockCodeSnippetGenqlSelection{
    allowedLanguages?: boolean | number
    code?: boolean | number
    /** @deprecated Figuring out the correct api. */
    html?: { __args: {
    /** Theme for the code snippet */
    theme?: (Scalars['String'] | null)} } | boolean | number
    language?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockColorGenqlSelection{
    b?: boolean | number
    g?: boolean | number
    hex?: boolean | number
    hsl?: boolean | number
    r?: boolean | number
    rgb?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockDocumentGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    on_Authors?: AuthorsGenqlSelection
    on_AuthorsItem?: AuthorsItemGenqlSelection
    on_Blog?: BlogGenqlSelection
    on_Categories?: CategoriesGenqlSelection
    on_CategoriesItem?: CategoriesItemGenqlSelection
    on_LegalPages?: LegalPagesGenqlSelection
    on_LegalPagesItem?: LegalPagesItemGenqlSelection
    on_Posts?: PostsGenqlSelection
    on_PostsItem?: PostsItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockDocumentSysGenqlSelection{
    apiNamePath?: boolean | number
    createdAt?: boolean | number
    hash?: boolean | number
    id?: boolean | number
    idPath?: boolean | number
    lastModifiedAt?: boolean | number
    slug?: boolean | number
    slugPath?: boolean | number
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockFileGenqlSelection{
    fileName?: boolean | number
    fileSize?: boolean | number
    lastModified?: boolean | number
    mimeType?: boolean | number
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockImageGenqlSelection{
    alt?: boolean | number
    aspectRatio?: boolean | number
    blurDataURL?: boolean | number
    fileName?: boolean | number
    fileSize?: boolean | number
    height?: boolean | number
    lastModified?: boolean | number
    mimeType?: boolean | number
    /** @deprecated Renamed to `blurDataURL` to match Next.js Image's naming convention. */
    placeholderURL?: boolean | number
    /** @deprecated Use `url` instead. */
    rawUrl?: boolean | number
    thumbhash?: boolean | number
    /**
     * This field is used to generate the image URL with the provided options. The options are passed as arguments. For example, if you want to resize the image to 200x200 pixels, you can use the following query:
     * 
     * ```graphql
     * {
     *   blockImage {
     *     url(width: 200, height: 200)
     *   }
     * }
     * ```
     * 
     * This will return the URL with the width and height set to 200 pixels.
     * 
     * BaseHub uses Cloudflare for image resizing. Check out [all available options in their docs](https://developers.cloudflare.com/images/transform-images/transform-via-workers/#fetch-options).
     * 
     */
    url?: { __args: {anim?: (Scalars['String'] | null), background?: (Scalars['String'] | null), blur?: (Scalars['Int'] | null), border?: (Scalars['String'] | null), brightness?: (Scalars['Int'] | null), compression?: (Scalars['String'] | null), contrast?: (Scalars['Int'] | null), dpr?: (Scalars['Int'] | null), fit?: (Scalars['String'] | null), format?: (Scalars['String'] | null), gamma?: (Scalars['String'] | null), gravity?: (Scalars['String'] | null), height?: (Scalars['Int'] | null), metadata?: (Scalars['String'] | null), quality?: (Scalars['Int'] | null), rotate?: (Scalars['String'] | null), sharpen?: (Scalars['String'] | null), trim?: (Scalars['String'] | null), width?: (Scalars['Int'] | null)} } | boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockListGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _meta?: ListMetaGenqlSelection
    /** The key used to search from the frontend. */
    _searchKey?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    on_Authors?: AuthorsGenqlSelection
    on_Categories?: CategoriesGenqlSelection
    on_LegalPages?: LegalPagesGenqlSelection
    on_Posts?: PostsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockOgImageGenqlSelection{
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Rich text block */
export interface BlockRichTextGenqlSelection{
    html?: { __args: {
    /** It automatically generates a unique id for each heading present in the HTML. Enabled by default. */
    slugs?: (Scalars['Boolean'] | null), 
    /** Inserts a table of contents at the beginning of the HTML. */
    toc?: (Scalars['Boolean'] | null)} } | boolean | number
    json?: RichTextJsonGenqlSelection
    markdown?: boolean | number
    plainText?: boolean | number
    readingTime?: { __args: {
    /** Words per minute, defaults to average 183wpm */
    wpm?: (Scalars['Int'] | null)} } | boolean | number
    on_Body?: BodyGenqlSelection
    on_Body_1?: Body_1GenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlockVideoGenqlSelection{
    aspectRatio?: boolean | number
    /** The duration of the video in seconds. If the duration is not available, it will be estimated based on the file size. */
    duration?: boolean | number
    fileName?: boolean | number
    fileSize?: boolean | number
    height?: boolean | number
    lastModified?: boolean | number
    mimeType?: boolean | number
    url?: boolean | number
    width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlogGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    authors?: (AuthorsGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (AuthorsItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (AuthorsItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    categories?: (CategoriesGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (CategoriesItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (CategoriesItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    posts?: (PostsGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (PostsItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (PostsItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BodyGenqlSelection{
    html?: { __args: {
    /** It automatically generates a unique id for each heading present in the HTML. Enabled by default. */
    slugs?: (Scalars['Boolean'] | null), 
    /** Inserts a table of contents at the beginning of the HTML. */
    toc?: (Scalars['Boolean'] | null)} } | boolean | number
    json?: BodyRichTextGenqlSelection
    markdown?: boolean | number
    plainText?: boolean | number
    readingTime?: { __args: {
    /** Words per minute, defaults to average 183wpm */
    wpm?: (Scalars['Int'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BodyRichTextGenqlSelection{
    content?: boolean | number
    toc?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface Body_1GenqlSelection{
    html?: { __args: {
    /** It automatically generates a unique id for each heading present in the HTML. Enabled by default. */
    slugs?: (Scalars['Boolean'] | null), 
    /** Inserts a table of contents at the beginning of the HTML. */
    toc?: (Scalars['Boolean'] | null)} } | boolean | number
    json?: Body_1RichTextGenqlSelection
    markdown?: boolean | number
    plainText?: boolean | number
    readingTime?: { __args: {
    /** Words per minute, defaults to average 183wpm */
    wpm?: (Scalars['Int'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface Body_1RichTextGenqlSelection{
    content?: boolean | number
    toc?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CategoriesGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _meta?: ListMetaGenqlSelection
    /** The key used to search from the frontend. */
    _searchKey?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    items?: CategoriesItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CategoriesItemGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CategoriesItemFilterInput {AND?: (CategoriesItemFilterInput | null),OR?: (CategoriesItemFilterInput | null),_sys_apiNamePath?: (StringFilter | null),_sys_createdAt?: (DateFilter | null),_sys_hash?: (StringFilter | null),_sys_id?: (StringFilter | null),_sys_idPath?: (StringFilter | null),_sys_lastModifiedAt?: (DateFilter | null),_sys_slug?: (StringFilter | null),_sys_slugPath?: (StringFilter | null),_sys_title?: (StringFilter | null)}

export interface DateFilter {eq?: (Scalars['DateTime'] | null),isAfter?: (Scalars['DateTime'] | null),isBefore?: (Scalars['DateTime'] | null),neq?: (Scalars['DateTime'] | null),onOrAfter?: (Scalars['DateTime'] | null),onOrBefore?: (Scalars['DateTime'] | null)}

export interface LegalPagesGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _meta?: ListMetaGenqlSelection
    /** The key used to search from the frontend. */
    _searchKey?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    items?: LegalPagesItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LegalPagesItemGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    body?: Body_1GenqlSelection
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LegalPagesItemFilterInput {AND?: (LegalPagesItemFilterInput | null),OR?: (LegalPagesItemFilterInput | null),_sys_apiNamePath?: (StringFilter | null),_sys_createdAt?: (DateFilter | null),_sys_hash?: (StringFilter | null),_sys_id?: (StringFilter | null),_sys_idPath?: (StringFilter | null),_sys_lastModifiedAt?: (DateFilter | null),_sys_slug?: (StringFilter | null),_sys_slugPath?: (StringFilter | null),_sys_title?: (StringFilter | null),description?: (StringFilter | null)}

export interface ListFilter {isEmpty?: (Scalars['Boolean'] | null),length?: (Scalars['Int'] | null)}

export interface ListMetaGenqlSelection{
    totalCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NumberFilter {eq?: (Scalars['Float'] | null),gt?: (Scalars['Float'] | null),gte?: (Scalars['Float'] | null),lt?: (Scalars['Float'] | null),lte?: (Scalars['Float'] | null),neq?: (Scalars['Float'] | null)}

export interface PostsGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _meta?: ListMetaGenqlSelection
    /** The key used to search from the frontend. */
    _searchKey?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    items?: PostsItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PostsItemGenqlSelection{
    _analyticsKey?: { __args: {
    /**
     * The scope of the analytics key. Use `send` for just ingesting data. Use `query` if you need to show an analytics data in your website.
     * 
     * Have in mind, if you expose your `query` analytics key in the frontend, you'll be exposing all of this block's analytics data to the public. This is generally safe, but it might not be in your case.
     */
    scope?: (AnalyticsKeyScope | null)} } | boolean | number
    _id?: boolean | number
    _idPath?: boolean | number
    _slug?: boolean | number
    _slugPath?: boolean | number
    _sys?: BlockDocumentSysGenqlSelection
    _title?: boolean | number
    authors?: AuthorsItemGenqlSelection
    body?: BodyGenqlSelection
    categories?: CategoriesItemGenqlSelection
    /** ISO 8601 date string. */
    date?: boolean | number
    description?: boolean | number
    image?: BlockImageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PostsItemFilterInput {AND?: (PostsItemFilterInput | null),OR?: (PostsItemFilterInput | null),_sys_apiNamePath?: (StringFilter | null),_sys_createdAt?: (DateFilter | null),_sys_hash?: (StringFilter | null),_sys_id?: (StringFilter | null),_sys_idPath?: (StringFilter | null),_sys_lastModifiedAt?: (DateFilter | null),_sys_slug?: (StringFilter | null),_sys_slugPath?: (StringFilter | null),_sys_title?: (StringFilter | null),authors?: (PostsItemFilterInput__authors_0___untitled | null),categories?: (PostsItemFilterInput__categories_0___untitled | null),date?: (DateFilter | null),description?: (StringFilter | null)}

export interface PostsItemFilterInput__authors_0___untitled {_sys_apiNamePath?: (StringFilter | null),_sys_createdAt?: (DateFilter | null),_sys_hash?: (StringFilter | null),_sys_id?: (StringFilter | null),_sys_idPath?: (StringFilter | null),_sys_lastModifiedAt?: (DateFilter | null),_sys_slug?: (StringFilter | null),_sys_slugPath?: (StringFilter | null),_sys_title?: (StringFilter | null),xUrl?: (StringFilter | null)}

export interface PostsItemFilterInput__categories_0___untitled {_sys_apiNamePath?: (StringFilter | null),_sys_createdAt?: (DateFilter | null),_sys_hash?: (StringFilter | null),_sys_id?: (StringFilter | null),_sys_idPath?: (StringFilter | null),_sys_lastModifiedAt?: (DateFilter | null),_sys_slug?: (StringFilter | null),_sys_slugPath?: (StringFilter | null),_sys_title?: (StringFilter | null)}

export interface QueryGenqlSelection{
    /** Query across all of the instances of a component. Pass in filters and sorts if you want, and get each instance via the `items` key. */
    _componentInstances?: _componentsGenqlSelection
    _sys?: RepoSysGenqlSelection
    blog?: BlogGenqlSelection
    legalPages?: (LegalPagesGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (LegalPagesItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (LegalPagesItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RepoSysGenqlSelection{
    hash?: boolean | number
    id?: boolean | number
    slug?: boolean | number
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RichTextJsonGenqlSelection{
    content?: boolean | number
    toc?: boolean | number
    on_BaseRichTextJson?: BaseRichTextJsonGenqlSelection
    on_BodyRichText?: BodyRichTextGenqlSelection
    on_Body_1RichText?: Body_1RichTextGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface StringFilter {contains?: (Scalars['String'] | null),endsWith?: (Scalars['String'] | null),eq?: (Scalars['String'] | null),matches?: (StringMatchesFilter | null),notEq?: (Scalars['String'] | null),startsWith?: (Scalars['String'] | null)}

export interface StringMatchesFilter {caseSensitive?: (Scalars['Boolean'] | null),pattern: Scalars['String']}

export interface VariantGenqlSelection{
    apiName?: boolean | number
    color?: boolean | number
    id?: boolean | number
    isDefault?: boolean | number
    label?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface _componentsGenqlSelection{
    authorsItem?: (AuthorsGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (AuthorsItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (AuthorsItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    categoriesItem?: (CategoriesGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (CategoriesItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (CategoriesItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    legalPagesItem?: (LegalPagesGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (LegalPagesItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (LegalPagesItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    postsItem?: (PostsGenqlSelection & { __args?: {
    /** Filter by a field. */
    filter?: (PostsItemFilterInput | null), 
    /** Limit the number of items returned. Defaults to 500. */
    first?: (Scalars['Int'] | null), 
    /** Order by a field. */
    orderBy?: (PostsItemOrderByEnum | null), 
    /** Skip the first n items. */
    skip?: (Scalars['Int'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

type FragmentsMap = {
  Authors: {
    root: Authors,
    selection: AuthorsGenqlSelection,
}
  AuthorsItem: {
    root: AuthorsItem,
    selection: AuthorsItemGenqlSelection,
}
  BaseRichTextJson: {
    root: BaseRichTextJson,
    selection: BaseRichTextJsonGenqlSelection,
}
  BlockAudio: {
    root: BlockAudio,
    selection: BlockAudioGenqlSelection,
}
  BlockCodeSnippet: {
    root: BlockCodeSnippet,
    selection: BlockCodeSnippetGenqlSelection,
}
  BlockColor: {
    root: BlockColor,
    selection: BlockColorGenqlSelection,
}
  BlockDocument: {
    root: BlockDocument,
    selection: BlockDocumentGenqlSelection,
}
  BlockDocumentSys: {
    root: BlockDocumentSys,
    selection: BlockDocumentSysGenqlSelection,
}
  BlockFile: {
    root: BlockFile,
    selection: BlockFileGenqlSelection,
}
  BlockImage: {
    root: BlockImage,
    selection: BlockImageGenqlSelection,
}
  BlockList: {
    root: BlockList,
    selection: BlockListGenqlSelection,
}
  BlockOgImage: {
    root: BlockOgImage,
    selection: BlockOgImageGenqlSelection,
}
  BlockRichText: {
    root: BlockRichText,
    selection: BlockRichTextGenqlSelection,
}
  BlockVideo: {
    root: BlockVideo,
    selection: BlockVideoGenqlSelection,
}
  Blog: {
    root: Blog,
    selection: BlogGenqlSelection,
}
  Body: {
    root: Body,
    selection: BodyGenqlSelection,
}
  BodyRichText: {
    root: BodyRichText,
    selection: BodyRichTextGenqlSelection,
}
  Body_1: {
    root: Body_1,
    selection: Body_1GenqlSelection,
}
  Body_1RichText: {
    root: Body_1RichText,
    selection: Body_1RichTextGenqlSelection,
}
  Categories: {
    root: Categories,
    selection: CategoriesGenqlSelection,
}
  CategoriesItem: {
    root: CategoriesItem,
    selection: CategoriesItemGenqlSelection,
}
  LegalPages: {
    root: LegalPages,
    selection: LegalPagesGenqlSelection,
}
  LegalPagesItem: {
    root: LegalPagesItem,
    selection: LegalPagesItemGenqlSelection,
}
  ListMeta: {
    root: ListMeta,
    selection: ListMetaGenqlSelection,
}
  Posts: {
    root: Posts,
    selection: PostsGenqlSelection,
}
  PostsItem: {
    root: PostsItem,
    selection: PostsItemGenqlSelection,
}
  Query: {
    root: Query,
    selection: QueryGenqlSelection,
}
  RepoSys: {
    root: RepoSys,
    selection: RepoSysGenqlSelection,
}
  RichTextJson: {
    root: RichTextJson,
    selection: RichTextJsonGenqlSelection,
}
  Variant: {
    root: Variant,
    selection: VariantGenqlSelection,
}
  _components: {
    root: _components,
    selection: _componentsGenqlSelection,
}
}

import { FieldsSelection } from "./runtime";

export function fragmentOn<
    TypeName extends keyof FragmentsMap,
    Selection extends FragmentsMap[TypeName]["selection"],
>(name: TypeName, fields: Selection) {
  return { __fragmentOn: name, ...fields } as const;
}

// credits: https://stackoverflow.com/a/54487392
type OmitDistributive<T, K extends PropertyKey> = T extends any
    ? T extends object
        ? Id<OmitRecursively<T, K>>
        : T
    : never
type Id<T> = {} & { [P in keyof T]: T[P] } // Cosmetic use only makes the tooltips expad the type can be removed
type OmitRecursively<T, K extends PropertyKey> = Omit<
    { [P in keyof T]: OmitDistributive<T[P], K> },
    K
>

export namespace fragmentOn {
    export type infer<T> = T extends {
      __fragmentOn: infer U extends keyof FragmentsMap;
    }
      ? OmitRecursively<FieldsSelection<FragmentsMap[U]["root"], Omit<T, "__fragmentOn">>, "__fragmentOn">
      : never;
  }


// This is a BaseHub-specific thing:

type RecursiveCollection<T, Key extends keyof T> = T & {
[key in Key]: { items: RecursiveCollection<T, Key> };
};

export function fragmentOnRecursiveCollection<
  TypeName extends keyof FragmentsMap,
  Selection extends FragmentsMap[TypeName]["selection"],
  RecursiveKey extends keyof FragmentsMap[TypeName]["selection"]
>(
  name: TypeName,
  fields: Selection,
  options: {
    recursiveKey: RecursiveKey;
    levels: number;
    getLevelArgs?: (level: number) => unknown;
  }
) {
  let current = {
    ...fields,
  } as RecursiveCollection<
    { readonly __fragmentOn: TypeName } & Selection,
    RecursiveKey
  >;
  if (options.levels > 0) {
    current[options.recursiveKey] = {
      ...(options.getLevelArgs
        ? { __args: options.getLevelArgs(options.levels) }
        : {}),
      items: fragmentOnRecursiveCollection(name, fields, {
        ...options,
        levels: options.levels - 1,
      }),
    } as any;
  }
  return current;
}




    const Authors_possibleTypes: string[] = ['Authors']
    export const isAuthors = (obj?: { __typename?: any } | null): obj is Authors => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthors"')
      return Authors_possibleTypes.includes(obj.__typename)
    }
    


    const AuthorsItem_possibleTypes: string[] = ['AuthorsItem']
    export const isAuthorsItem = (obj?: { __typename?: any } | null): obj is AuthorsItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthorsItem"')
      return AuthorsItem_possibleTypes.includes(obj.__typename)
    }
    


    const BaseRichTextJson_possibleTypes: string[] = ['BaseRichTextJson']
    export const isBaseRichTextJson = (obj?: { __typename?: any } | null): obj is BaseRichTextJson => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBaseRichTextJson"')
      return BaseRichTextJson_possibleTypes.includes(obj.__typename)
    }
    


    const BlockAudio_possibleTypes: string[] = ['BlockAudio']
    export const isBlockAudio = (obj?: { __typename?: any } | null): obj is BlockAudio => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockAudio"')
      return BlockAudio_possibleTypes.includes(obj.__typename)
    }
    


    const BlockCodeSnippet_possibleTypes: string[] = ['BlockCodeSnippet']
    export const isBlockCodeSnippet = (obj?: { __typename?: any } | null): obj is BlockCodeSnippet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockCodeSnippet"')
      return BlockCodeSnippet_possibleTypes.includes(obj.__typename)
    }
    


    const BlockColor_possibleTypes: string[] = ['BlockColor']
    export const isBlockColor = (obj?: { __typename?: any } | null): obj is BlockColor => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockColor"')
      return BlockColor_possibleTypes.includes(obj.__typename)
    }
    


    const BlockDocument_possibleTypes: string[] = ['Authors','AuthorsItem','Blog','Categories','CategoriesItem','LegalPages','LegalPagesItem','Posts','PostsItem']
    export const isBlockDocument = (obj?: { __typename?: any } | null): obj is BlockDocument => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockDocument"')
      return BlockDocument_possibleTypes.includes(obj.__typename)
    }
    


    const BlockDocumentSys_possibleTypes: string[] = ['BlockDocumentSys']
    export const isBlockDocumentSys = (obj?: { __typename?: any } | null): obj is BlockDocumentSys => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockDocumentSys"')
      return BlockDocumentSys_possibleTypes.includes(obj.__typename)
    }
    


    const BlockFile_possibleTypes: string[] = ['BlockFile']
    export const isBlockFile = (obj?: { __typename?: any } | null): obj is BlockFile => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockFile"')
      return BlockFile_possibleTypes.includes(obj.__typename)
    }
    


    const BlockImage_possibleTypes: string[] = ['BlockImage']
    export const isBlockImage = (obj?: { __typename?: any } | null): obj is BlockImage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockImage"')
      return BlockImage_possibleTypes.includes(obj.__typename)
    }
    


    const BlockList_possibleTypes: string[] = ['Authors','Categories','LegalPages','Posts']
    export const isBlockList = (obj?: { __typename?: any } | null): obj is BlockList => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockList"')
      return BlockList_possibleTypes.includes(obj.__typename)
    }
    


    const BlockOgImage_possibleTypes: string[] = ['BlockOgImage']
    export const isBlockOgImage = (obj?: { __typename?: any } | null): obj is BlockOgImage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockOgImage"')
      return BlockOgImage_possibleTypes.includes(obj.__typename)
    }
    


    const BlockRichText_possibleTypes: string[] = ['Body','Body_1']
    export const isBlockRichText = (obj?: { __typename?: any } | null): obj is BlockRichText => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockRichText"')
      return BlockRichText_possibleTypes.includes(obj.__typename)
    }
    


    const BlockVideo_possibleTypes: string[] = ['BlockVideo']
    export const isBlockVideo = (obj?: { __typename?: any } | null): obj is BlockVideo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlockVideo"')
      return BlockVideo_possibleTypes.includes(obj.__typename)
    }
    


    const Blog_possibleTypes: string[] = ['Blog']
    export const isBlog = (obj?: { __typename?: any } | null): obj is Blog => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlog"')
      return Blog_possibleTypes.includes(obj.__typename)
    }
    


    const Body_possibleTypes: string[] = ['Body']
    export const isBody = (obj?: { __typename?: any } | null): obj is Body => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBody"')
      return Body_possibleTypes.includes(obj.__typename)
    }
    


    const BodyRichText_possibleTypes: string[] = ['BodyRichText']
    export const isBodyRichText = (obj?: { __typename?: any } | null): obj is BodyRichText => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBodyRichText"')
      return BodyRichText_possibleTypes.includes(obj.__typename)
    }
    


    const Body_1_possibleTypes: string[] = ['Body_1']
    export const isBody_1 = (obj?: { __typename?: any } | null): obj is Body_1 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBody_1"')
      return Body_1_possibleTypes.includes(obj.__typename)
    }
    


    const Body_1RichText_possibleTypes: string[] = ['Body_1RichText']
    export const isBody_1RichText = (obj?: { __typename?: any } | null): obj is Body_1RichText => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBody_1RichText"')
      return Body_1RichText_possibleTypes.includes(obj.__typename)
    }
    


    const Categories_possibleTypes: string[] = ['Categories']
    export const isCategories = (obj?: { __typename?: any } | null): obj is Categories => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCategories"')
      return Categories_possibleTypes.includes(obj.__typename)
    }
    


    const CategoriesItem_possibleTypes: string[] = ['CategoriesItem']
    export const isCategoriesItem = (obj?: { __typename?: any } | null): obj is CategoriesItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCategoriesItem"')
      return CategoriesItem_possibleTypes.includes(obj.__typename)
    }
    


    const LegalPages_possibleTypes: string[] = ['LegalPages']
    export const isLegalPages = (obj?: { __typename?: any } | null): obj is LegalPages => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLegalPages"')
      return LegalPages_possibleTypes.includes(obj.__typename)
    }
    


    const LegalPagesItem_possibleTypes: string[] = ['LegalPagesItem']
    export const isLegalPagesItem = (obj?: { __typename?: any } | null): obj is LegalPagesItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLegalPagesItem"')
      return LegalPagesItem_possibleTypes.includes(obj.__typename)
    }
    


    const ListMeta_possibleTypes: string[] = ['ListMeta']
    export const isListMeta = (obj?: { __typename?: any } | null): obj is ListMeta => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isListMeta"')
      return ListMeta_possibleTypes.includes(obj.__typename)
    }
    


    const Posts_possibleTypes: string[] = ['Posts']
    export const isPosts = (obj?: { __typename?: any } | null): obj is Posts => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPosts"')
      return Posts_possibleTypes.includes(obj.__typename)
    }
    


    const PostsItem_possibleTypes: string[] = ['PostsItem']
    export const isPostsItem = (obj?: { __typename?: any } | null): obj is PostsItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPostsItem"')
      return PostsItem_possibleTypes.includes(obj.__typename)
    }
    


    const Query_possibleTypes: string[] = ['Query']
    export const isQuery = (obj?: { __typename?: any } | null): obj is Query => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuery"')
      return Query_possibleTypes.includes(obj.__typename)
    }
    


    const RepoSys_possibleTypes: string[] = ['RepoSys']
    export const isRepoSys = (obj?: { __typename?: any } | null): obj is RepoSys => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRepoSys"')
      return RepoSys_possibleTypes.includes(obj.__typename)
    }
    


    const RichTextJson_possibleTypes: string[] = ['BaseRichTextJson','BodyRichText','Body_1RichText']
    export const isRichTextJson = (obj?: { __typename?: any } | null): obj is RichTextJson => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRichTextJson"')
      return RichTextJson_possibleTypes.includes(obj.__typename)
    }
    


    const Variant_possibleTypes: string[] = ['Variant']
    export const isVariant = (obj?: { __typename?: any } | null): obj is Variant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVariant"')
      return Variant_possibleTypes.includes(obj.__typename)
    }
    


    const _components_possibleTypes: string[] = ['_components']
    export const is_components = (obj?: { __typename?: any } | null): obj is _components => {
      if (!obj?.__typename) throw new Error('__typename is missing in "is_components"')
      return _components_possibleTypes.includes(obj.__typename)
    }
    

export const enumAnalyticsKeyScope = {
   query: 'query' as const,
   send: 'send' as const
}

export const enumAuthorsItemOrderByEnum = {
   _sys_createdAt__ASC: '_sys_createdAt__ASC' as const,
   _sys_createdAt__DESC: '_sys_createdAt__DESC' as const,
   _sys_hash__ASC: '_sys_hash__ASC' as const,
   _sys_hash__DESC: '_sys_hash__DESC' as const,
   _sys_id__ASC: '_sys_id__ASC' as const,
   _sys_id__DESC: '_sys_id__DESC' as const,
   _sys_lastModifiedAt__ASC: '_sys_lastModifiedAt__ASC' as const,
   _sys_lastModifiedAt__DESC: '_sys_lastModifiedAt__DESC' as const,
   _sys_slug__ASC: '_sys_slug__ASC' as const,
   _sys_slug__DESC: '_sys_slug__DESC' as const,
   _sys_title__ASC: '_sys_title__ASC' as const,
   _sys_title__DESC: '_sys_title__DESC' as const,
   avatar__ASC: 'avatar__ASC' as const,
   avatar__DESC: 'avatar__DESC' as const,
   xUrl__ASC: 'xUrl__ASC' as const,
   xUrl__DESC: 'xUrl__DESC' as const
}

export const enumCategoriesItemOrderByEnum = {
   _sys_createdAt__ASC: '_sys_createdAt__ASC' as const,
   _sys_createdAt__DESC: '_sys_createdAt__DESC' as const,
   _sys_hash__ASC: '_sys_hash__ASC' as const,
   _sys_hash__DESC: '_sys_hash__DESC' as const,
   _sys_id__ASC: '_sys_id__ASC' as const,
   _sys_id__DESC: '_sys_id__DESC' as const,
   _sys_lastModifiedAt__ASC: '_sys_lastModifiedAt__ASC' as const,
   _sys_lastModifiedAt__DESC: '_sys_lastModifiedAt__DESC' as const,
   _sys_slug__ASC: '_sys_slug__ASC' as const,
   _sys_slug__DESC: '_sys_slug__DESC' as const,
   _sys_title__ASC: '_sys_title__ASC' as const,
   _sys_title__DESC: '_sys_title__DESC' as const
}

export const enumLegalPagesItemOrderByEnum = {
   _sys_createdAt__ASC: '_sys_createdAt__ASC' as const,
   _sys_createdAt__DESC: '_sys_createdAt__DESC' as const,
   _sys_hash__ASC: '_sys_hash__ASC' as const,
   _sys_hash__DESC: '_sys_hash__DESC' as const,
   _sys_id__ASC: '_sys_id__ASC' as const,
   _sys_id__DESC: '_sys_id__DESC' as const,
   _sys_lastModifiedAt__ASC: '_sys_lastModifiedAt__ASC' as const,
   _sys_lastModifiedAt__DESC: '_sys_lastModifiedAt__DESC' as const,
   _sys_slug__ASC: '_sys_slug__ASC' as const,
   _sys_slug__DESC: '_sys_slug__DESC' as const,
   _sys_title__ASC: '_sys_title__ASC' as const,
   _sys_title__DESC: '_sys_title__DESC' as const,
   body__ASC: 'body__ASC' as const,
   body__DESC: 'body__DESC' as const,
   description__ASC: 'description__ASC' as const,
   description__DESC: 'description__DESC' as const
}

export const enumPostsItemOrderByEnum = {
   _sys_createdAt__ASC: '_sys_createdAt__ASC' as const,
   _sys_createdAt__DESC: '_sys_createdAt__DESC' as const,
   _sys_hash__ASC: '_sys_hash__ASC' as const,
   _sys_hash__DESC: '_sys_hash__DESC' as const,
   _sys_id__ASC: '_sys_id__ASC' as const,
   _sys_id__DESC: '_sys_id__DESC' as const,
   _sys_lastModifiedAt__ASC: '_sys_lastModifiedAt__ASC' as const,
   _sys_lastModifiedAt__DESC: '_sys_lastModifiedAt__DESC' as const,
   _sys_slug__ASC: '_sys_slug__ASC' as const,
   _sys_slug__DESC: '_sys_slug__DESC' as const,
   _sys_title__ASC: '_sys_title__ASC' as const,
   _sys_title__DESC: '_sys_title__DESC' as const,
   authors__ASC: 'authors__ASC' as const,
   authors__DESC: 'authors__DESC' as const,
   body__ASC: 'body__ASC' as const,
   body__DESC: 'body__DESC' as const,
   categories__ASC: 'categories__ASC' as const,
   categories__DESC: 'categories__DESC' as const,
   date__ASC: 'date__ASC' as const,
   date__DESC: 'date__DESC' as const,
   description__ASC: 'description__ASC' as const,
   description__DESC: 'description__DESC' as const,
   image__ASC: 'image__ASC' as const,
   image__DESC: 'image__DESC' as const
}
